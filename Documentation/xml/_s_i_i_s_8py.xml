<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_s_i_i_s_8py" kind="file" language="Python">
    <compoundname>SIIS.py</compoundname>
    <innerclass refid="class_s_i_i_s_1_1_state" prot="public">SIIS::State</innerclass>
    <innerclass refid="class_s_i_i_s_1_1_node" prot="public">SIIS::Node</innerclass>
    <innernamespace refid="namespace_s_i_i_s">SIIS</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespace_s_i_i_s" refkind="compound"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;Imports&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>enum</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>random<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>simpy</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#import<sp/>matlab.engine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy.linalg<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>linalg</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>collections<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Counter</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">Simulation<sp/>Description<sp/>Variables</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="namespace_s_i_i_s_1a62794a73400a5a491e326f153fb0eb4a" refkind="member"><highlight class="normal">N<sp/>=<sp/>200</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="namespace_s_i_i_s_1a849dda36bfc0f180104fed68d251b82e" refkind="member"><highlight class="normal">tm<sp/>=<sp/>1000<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral">Sampling<sp/>Variables</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="namespace_s_i_i_s_1aad32ed61613e587b5c5de338d317cba3" refkind="member"><highlight class="normal">take_sample<sp/><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="namespace_s_i_i_s_1aeaf718b2a70cffd8bcc43b7d0f402913" refkind="member"><highlight class="normal">smp_size<sp/>=<sp/>10<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Meme<sp/>Parameters&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="namespace_s_i_i_s_1acf03c50d66038c1c2c8bf85c360af75f" refkind="member"><highlight class="normal">theta<sp/>=<sp/>.10<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="namespace_s_i_i_s_1a727237c66ea7d98aca6b3bd4e6fa1bcc" refkind="member"><highlight class="normal">beta1<sp/>=.05</highlight></codeline>
<codeline lineno="47" refid="namespace_s_i_i_s_1adcb989b943ed7927e5afbc277ca211a3" refkind="member"><highlight class="normal">beta2<sp/>=.05</highlight></codeline>
<codeline lineno="48" refid="namespace_s_i_i_s_1a401502781da59716e64740b944b8f784" refkind="member"><highlight class="normal">delta1<sp/>=<sp/>.04</highlight></codeline>
<codeline lineno="49" refid="namespace_s_i_i_s_1a7e76e4a65200a189d0f8589d2cc767be" refkind="member"><highlight class="normal">delta2<sp/>=<sp/>.04</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="namespace_s_i_i_s_1a72c51d8f0c7bc3d8db7c07222bf30a02" refkind="member"><highlight class="normal">M1_Wins<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="namespace_s_i_i_s_1a09e3c58fadac2b7cb752df1134e77625" refkind="member"><highlight class="normal">M2_Wins<sp/>=<sp/>0<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="namespace_s_i_i_s_1af53f6a10fe05cb0ae7531c59b50f8286" refkind="member"><highlight class="normal">No_win<sp/>=<sp/>0<sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="63" refid="namespace_s_i_i_s_1a8be68f64adcc7f3c6998c43e9042cc32" refkind="member"><highlight class="normal">allNodes<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="namespace_s_i_i_s_1a6979c054ef09cad22f92ef12e7c59ce7" refkind="member"><highlight class="normal">tot_inf1<sp/>=<sp/>0<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="namespace_s_i_i_s_1a0e357539172c7604af85e61695c08ed3" refkind="member"><highlight class="normal">old_inf1<sp/>=<sp/>0<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="namespace_s_i_i_s_1a52ffed4dec36d3be6b39b4e29686d1f5" refkind="member"><highlight class="normal">old_inf2<sp/>=<sp/>0<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="namespace_s_i_i_s_1a72adb6238998622617fe12e208015e06" refkind="member"><highlight class="normal">tot_inf2<sp/>=<sp/>0<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="namespace_s_i_i_s_1a406a1b1e27b327786ca2fc2dac2c9eb4" refkind="member"><highlight class="normal">total_M1<sp/>=<sp/>0<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="namespace_s_i_i_s_1a638970adddbf2dbc6cd3205514811467" refkind="member"><highlight class="normal">total_M2<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="namespace_s_i_i_s_1af25140b67018e5f34e54f62dfe42d78d" refkind="member"><highlight class="normal">total_S<sp/>=<sp/>0<sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_s_i_i_s_1_1_state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_s_i_i_s_1_1_state" kindref="compound">State</ref>(enum.Enum):</highlight></codeline>
<codeline lineno="89" refid="class_s_i_i_s_1_1_state_1a666833f111f4ce88e93efb45833775aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>S<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="90" refid="class_s_i_i_s_1_1_state_1a2be4789121968cf4a23a02f58e131f0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>I1<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="91" refid="class_s_i_i_s_1_1_state_1a6eaebdd004d589e4a5e642400d6579b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>I2<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="namespace_s_i_i_s_1ad1a44a181ccd1524730d53df9267ca27" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespace_s_i_i_s_1ad1a44a181ccd1524730d53df9267ca27" kindref="member">randomRem</ref>():</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodea<sp/>=<sp/>random.choice(allNodes)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_s_i_i_s_1aae09dbe3d97853cab90111e7f58197a7" kindref="member">removeNode</ref>(nodea)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="namespace_s_i_i_s_1aa7a9b6c4d2a2d91106dd90b854611539" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespace_s_i_i_s_1aa7a9b6c4d2a2d91106dd90b854611539" kindref="member">randomNeigh</ref>(pick):</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodea<sp/>=<sp/>random.choice(allNodes)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#pick<sp/>=<sp/>random.randint(0,<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>nodea</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pick<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/><sp/>random.choice(nodea.e1_Neighbors)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pick<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/><sp/>random.choice(nodea.e2_Neighbors)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_s_i_i_s_1aae09dbe3d97853cab90111e7f58197a7" kindref="member">removeNode</ref>(temp)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="namespace_s_i_i_s_1a80b1cbd24ef3bce4414388e55f7a8a17" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespace_s_i_i_s_1a80b1cbd24ef3bce4414388e55f7a8a17" kindref="member">max_degree</ref>(edge):</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>edge<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>A1.sum(axis<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>np.max(tmp)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_s_i_i_s_1aae09dbe3d97853cab90111e7f58197a7" kindref="member">removeNode</ref>(allNodes[i])</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>A2.sum(axis<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>np.max(tmp)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_s_i_i_s_1aae09dbe3d97853cab90111e7f58197a7" kindref="member">removeNode</ref>(allNodes[i])</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="namespace_s_i_i_s_1aae09dbe3d97853cab90111e7f58197a7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespace_s_i_i_s_1aae09dbe3d97853cab90111e7f58197a7" kindref="member">removeNode</ref>(nodea):</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allNodes.remove(nodea)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(allNodes)):<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(nodea<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>allNodes[i].e1_Neighbors):<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allNodes[i].e1_Neighbors.remove(nodea)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(nodea<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>allNodes[i].e2_Neighbors):</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allNodes[i].e2_Neighbors.remove(nodea)<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="class_s_i_i_s_1_1_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_s_i_i_s_1_1_node" kindref="compound">Node</ref>:<sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155" refid="class_s_i_i_s_1_1_node_1a6357c075f29e3a3690f5ab86f24d61b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0<sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159" refid="class_s_i_i_s_1_1_node_1a0c8227370e4dfe12e644be21eb434a34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_s_i_i_s_1_1_node_1a0c8227370e4dfe12e644be21eb434a34" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="160" refid="class_s_i_i_s_1_1_node_1ac60ec4bda7f8879860c7f086ab9c22a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_s_i_i_s_1_1_node_1ac60ec4bda7f8879860c7f086ab9c22a3" kindref="member">id</ref><sp/>=<sp/>Node.count</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Node.count+=1</highlight></codeline>
<codeline lineno="162" refid="class_s_i_i_s_1_1_node_1a78addc56ab36dcd9f2c78658e0556af5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_s_i_i_s_1_1_node_1a78addc56ab36dcd9f2c78658e0556af5" kindref="member">e1_Neighbors</ref><sp/>=<sp/>[]</highlight><highlight class="comment">#List<sp/>of<sp/>neighbors<sp/>of<sp/>node<sp/>in<sp/>edge<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="class_s_i_i_s_1_1_node_1a5e7c5e57b3622fe9af125d9fca87ec09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_s_i_i_s_1_1_node_1a5e7c5e57b3622fe9af125d9fca87ec09" kindref="member">e2_Neighbors</ref><sp/>=<sp/>[]</highlight><highlight class="comment">#List<sp/>of<sp/>neighbors<sp/>of<sp/>node<sp/>in<sp/>edge<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="class_s_i_i_s_1_1_node_1ae33315f9f91aefbcc422c5b88e318186" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_s_i_i_s_1_1_node_1ae33315f9f91aefbcc422c5b88e318186" kindref="member">state</ref><sp/>=<sp/>State.S<sp/></highlight><highlight class="comment">#State<sp/>of<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allNodes.append(self)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170" refid="class_s_i_i_s_1_1_node_1a3b7f95ca4ff93ff560e71df457a7a0ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_s_i_i_s_1_1_node_1a3b7f95ca4ff93ff560e71df457a7a0ef" kindref="member">addNeighbors</ref>(self):</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,N):</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>A1[self.<ref refid="class_s_i_i_s_1_1_node_1ac60ec4bda7f8879860c7f086ab9c22a3" kindref="member">id</ref>][x]<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_s_i_i_s_1_1_node_1a78addc56ab36dcd9f2c78658e0556af5" kindref="member">e1_Neighbors</ref>.append(allNodes[x])</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,N):</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>A2[self.<ref refid="class_s_i_i_s_1_1_node_1ac60ec4bda7f8879860c7f086ab9c22a3" kindref="member">id</ref>][x]<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_s_i_i_s_1_1_node_1a5e7c5e57b3622fe9af125d9fca87ec09" kindref="member">e2_Neighbors</ref>.append(allNodes[x])</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188" refid="class_s_i_i_s_1_1_node_1a33ca5cfa2fe32637b74eeb141fe69c58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_s_i_i_s_1_1_node_1a33ca5cfa2fe32637b74eeb141fe69c58" kindref="member">attack</ref>(self):</highlight><highlight class="comment">#Method<sp/>to<sp/>see<sp/>if<sp/>the<sp/>node<sp/>becomes<sp/>infected,<sp/>assuming<sp/>if<sp/>C1<sp/>==<sp/>C2<sp/>then<sp/>not<sp/>infected<sp/>by<sp/>either<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="class_s_i_i_s_1_1_node_1ae33315f9f91aefbcc422c5b88e318186" kindref="member">state</ref><sp/>!=<sp/>State.S:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>tot_inf1<sp/></highlight><highlight class="comment">#total<sp/>of<sp/>infections<sp/>made<sp/>by<sp/>nodes<sp/>infected<sp/>with<sp/>meme<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>tot_inf2<sp/></highlight><highlight class="comment">#total<sp/>of<sp/>infections<sp/>made<sp/>by<sp/>nodes<sp/>infected<sp/>with<sp/>meme<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C1=0<sp/></highlight><highlight class="comment">#@var<sp/>C1<sp/>holds<sp/>attacks<sp/>by<sp/>infected<sp/>neighbors<sp/>on<sp/>edge<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C2=0<sp/></highlight><highlight class="comment">#@var<sp/>C2<sp/>holds<sp/>attacks<sp/>by<sp/>infected<sp/>neighbors<sp/>on<sp/>edge<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="class_s_i_i_s_1_1_node_1a78addc56ab36dcd9f2c78658e0556af5" kindref="member">e1_Neighbors</ref>:</highlight><highlight class="comment">#<sp/>attacks<sp/>from<sp/>meme<sp/>1<sp/>that<sp/>can<sp/>only<sp/>spread<sp/>on<sp/>edge<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i.state<sp/>==<sp/>State.I1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>random.random()&lt;beta1:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C1<sp/>=<sp/>C1<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="class_s_i_i_s_1_1_node_1a5e7c5e57b3622fe9af125d9fca87ec09" kindref="member">e2_Neighbors</ref>:</highlight><highlight class="comment">#<sp/>attacks<sp/>from<sp/>meme<sp/>1<sp/>that<sp/>can<sp/>only<sp/>spread<sp/>on<sp/>edge<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i.state<sp/>==<sp/>State.I2<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>random.random()&lt;beta2:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C2<sp/>=<sp/>C2<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>C1<sp/>&gt;<sp/>C2:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_s_i_i_s_1_1_node_1ae33315f9f91aefbcc422c5b88e318186" kindref="member">state</ref><sp/>=<sp/>State.I1</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot_inf1<sp/>=<sp/>tot_inf1<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infected_meme1.append(self)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>C2<sp/>&gt;<sp/>C1:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_s_i_i_s_1_1_node_1ae33315f9f91aefbcc422c5b88e318186" kindref="member">state</ref><sp/>=<sp/>State.I2</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot_inf2<sp/>=<sp/>tot_inf2<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infected_meme2.append(self)</highlight></codeline>
<codeline lineno="209" refid="class_s_i_i_s_1_1_node_1acd6b35d8d18b4d691136961c3661bf42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_s_i_i_s_1_1_node_1acd6b35d8d18b4d691136961c3661bf42" kindref="member">recover</ref>(self):<sp/></highlight><highlight class="comment">#Method<sp/>to<sp/>see<sp/>if<sp/>node<sp/>recovers<sp/>assuming<sp/>node<sp/>cannot<sp/>be<sp/>infected<sp/>by<sp/>the<sp/>other<sp/>meme</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="class_s_i_i_s_1_1_node_1ae33315f9f91aefbcc422c5b88e318186" kindref="member">state</ref><sp/>==<sp/>State.S:</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="class_s_i_i_s_1_1_node_1ae33315f9f91aefbcc422c5b88e318186" kindref="member">state</ref><sp/>==<sp/>State.I1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>random.random()&lt;delta1:</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&quot;Infected<sp/>with<sp/>I1&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_s_i_i_s_1_1_node_1ae33315f9f91aefbcc422c5b88e318186" kindref="member">state</ref><sp/>=<sp/>State.S</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>infected_meme1:</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infected_meme1.remove(self)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="class_s_i_i_s_1_1_node_1ae33315f9f91aefbcc422c5b88e318186" kindref="member">state</ref><sp/>==<sp/>State.I2<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>random.random()&lt;delta2:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&quot;Infected<sp/>with<sp/>I2&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_s_i_i_s_1_1_node_1ae33315f9f91aefbcc422c5b88e318186" kindref="member">state</ref><sp/>=<sp/>State.S</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>infected_meme2:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infected_meme2.remove(self)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="namespace_s_i_i_s_1a68ed4322068cfbb790ec5fa305ded181" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespace_s_i_i_s_1a68ed4322068cfbb790ec5fa305ded181" kindref="member">set_simulation</ref>():</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>infected_meme1,infected_meme2,tot_inf1,tot_inf2</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>allNodes:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i.state<sp/>=<sp/>State.S</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>tot_inf1<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>tot_inf2<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>time,time_inf1,time_inf2<sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>time<sp/>=<sp/>[]</highlight><highlight class="comment">#time<sp/>for<sp/>x<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>time_inf1<sp/>=<sp/>[]</highlight><highlight class="comment">#array<sp/>of<sp/><sp/>number<sp/>of<sp/>infected<sp/>with<sp/>meme<sp/>1,<sp/>to<sp/>plot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>time_inf2<sp/>=<sp/>[]</highlight><highlight class="comment">#array<sp/>of<sp/><sp/>number<sp/>of<sp/>infected<sp/>with<sp/>meme<sp/>1,<sp/>to<sp/>plot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&quot;Len<sp/>of<sp/>infected:&quot;,len(infected_meme1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,len(infected_meme1)):</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infected_meme1[i].state<sp/>=<sp/>State.I1</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>remove<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,len(infected_meme2)):</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>infected_meme2[i].state<sp/>!=<sp/>State.I1:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infected_meme2[i].state<sp/>=<sp/>State.I2</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remove.append(infected_meme2[i])</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>remove:</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infected_meme2.remove(i)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_s_i_i_s_1a9ce6bf60763fb485eaee729dcb4c2adb" kindref="member">count</ref>()</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="namespace_s_i_i_s_1a9ce6bf60763fb485eaee729dcb4c2adb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespace_s_i_i_s_1a9ce6bf60763fb485eaee729dcb4c2adb" kindref="member">count</ref>():</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>total_M1,total_M2</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>countM1=countM2<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>allNodes:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i.state<sp/>==<sp/>State.I1:</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countM1<sp/>+=1</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>i.state<sp/>==<sp/>State.I2:</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countM2<sp/>+=1<sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>total_M1<sp/>=<sp/>countM1</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>total_M2<sp/>=<sp/>countM2</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="namespace_s_i_i_s_1a0451e8de5927fe55012013546da79f33" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespace_s_i_i_s_1a0451e8de5927fe55012013546da79f33" kindref="member">run_sim</ref>():</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>take_sample,<sp/>allNodes<sp/>,<sp/>smp_size<sp/>,<sp/>total_M1<sp/>,<sp/>total_M2<sp/>,<sp/>tot_inf1<sp/>,<sp/>tot_inf2</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>infected_meme1,<sp/>infected_meme2<sp/>,<sp/>M1_Wins<sp/>,<sp/>M2_Wins<sp/>,<sp/>No_win<sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>take_sample<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>want<sp/>to<sp/>sample<sp/>the<sp/>simulation<sp/>to<sp/>see<sp/>how<sp/>many<sp/>wins<sp/>happen<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specific<sp/>values<sp/>of<sp/>beta/delta/N</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual<sp/>Adjacency<sp/>matrices<sp/>are<sp/>different<sp/>each<sp/>run</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="283"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><sp/>range(0,smp_size):</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_s_i_i_s_1a68ed4322068cfbb790ec5fa305ded181" kindref="member">set_simulation</ref>()</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i<sp/>%<sp/>10<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Sample:&quot;</highlight><highlight class="normal">,i)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,tm):</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.append(t)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>allNodes:</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i.state<sp/>==<sp/>State.S:<sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.attack()</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.recover()</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_s_i_i_s_1a9ce6bf60763fb485eaee729dcb4c2adb" kindref="member">count</ref>()</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_inf1.append(total_M1)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_inf2.append(total_M2)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>total_M1<sp/>&gt;<sp/>total_M2<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>((total_M1-total_M2)/N)<sp/>&gt;<sp/>theta:<sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M1_Wins+=<sp/>1</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>total_M2<sp/>&gt;<sp/>total_M1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>((total_M2-total_M1)/N)<sp/>&gt;<sp/>theta:<sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M2_Wins+=<sp/>1</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>No_win<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,tm):</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="308"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>to<sp/>output<sp/>single<sp/>run,<sp/>then<sp/>output<sp/>a<sp/>graph<sp/>of<sp/>before<sp/>after</highlight></codeline>
<codeline lineno="309"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="310"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.append(t)</highlight></codeline>
<codeline lineno="311"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>t<sp/>%<sp/>100<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Time:&quot;</highlight><highlight class="normal">,t)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>allNodes:</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i.state<sp/>==<sp/>State.S:<sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.attack()</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.recover()</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_s_i_i_s_1a9ce6bf60763fb485eaee729dcb4c2adb" kindref="member">count</ref>()</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_inf1.append(total_M1)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_inf2.append(total_M2)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="namespace_s_i_i_s_1a107080135e2bcab2d5018a985632c0e1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespace_s_i_i_s_1a107080135e2bcab2d5018a985632c0e1" kindref="member">plot_res</ref>(pause,supress,spr):</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>old_inf1,old_inf2</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/>fig<sp/>=plt.figure()</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>take_sample<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.bar(</highlight><highlight class="stringliteral">&apos;Meme1&apos;</highlight><highlight class="normal">,tot_inf1,color=</highlight><highlight class="stringliteral">&quot;red&quot;</highlight><highlight class="normal">,<sp/>width<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.bar(</highlight><highlight class="stringliteral">&apos;Meme2&apos;</highlight><highlight class="normal">,tot_inf2,color=</highlight><highlight class="stringliteral">&quot;blue&quot;</highlight><highlight class="normal">,<sp/>width<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xlabel(</highlight><highlight class="stringliteral">&quot;Meme&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.ylabel(</highlight><highlight class="stringliteral">&quot;No.<sp/>Total<sp/>infections&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.title(</highlight><highlight class="stringliteral">&quot;Total<sp/>infections<sp/>by<sp/>meme&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>supress<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>pause<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_inf1<sp/>=<sp/>time_inf1</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_inf2<sp/>=<sp/>time_inf2</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>supress<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>pause<sp/>==<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.plot(time,old_inf1,color=</highlight><highlight class="stringliteral">&quot;red&quot;</highlight><highlight class="normal">,<sp/>label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Meme<sp/>1<sp/>λ<sp/>=<sp/>{}&quot;</highlight><highlight class="normal">.format(eigenValueMaxDegreeValue1.most_common(1)))</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.plot(time,old_inf2,color=</highlight><highlight class="stringliteral">&quot;blue&quot;</highlight><highlight class="normal">,<sp/>label<sp/>=</highlight><highlight class="stringliteral">&quot;Meme<sp/>2<sp/>λ<sp/>={}&quot;</highlight><highlight class="normal">.format(eigenValueMaxDegreeValue2.most_common(1)))<sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.plot(time,time_inf1,color=</highlight><highlight class="stringliteral">&quot;green&quot;</highlight><highlight class="normal">,<sp/>label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Meme<sp/>1<sp/>After<sp/>{}<sp/>Most<sp/>common<sp/>λ<sp/>=<sp/>{}&quot;</highlight><highlight class="normal">.format(spr,eigenValueMaxDegreeValue1.most_common(1)))</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.plot(time,time_inf2,color=</highlight><highlight class="stringliteral">&quot;yellow&quot;</highlight><highlight class="normal">,<sp/>label<sp/>=</highlight><highlight class="stringliteral">&quot;Meme<sp/>2<sp/>After<sp/>{}<sp/>Most<sp/>common<sp/>λ<sp/>=<sp/>{}&quot;</highlight><highlight class="normal">.format(spr,eigenValueMaxDegreeValue2.most_common(1)))</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xlabel(</highlight><highlight class="stringliteral">&quot;Time,t&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.ylabel(</highlight><highlight class="stringliteral">&quot;No.<sp/>Total<sp/>infections&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.title(</highlight><highlight class="stringliteral">&quot;Total<sp/>infections<sp/>by<sp/>meme&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.legend()</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pause<sp/>!=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>take_sample<sp/>==1:</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.bar(</highlight><highlight class="stringliteral">&apos;Meme1<sp/>wins&apos;</highlight><highlight class="normal">,M1_Wins,color=</highlight><highlight class="stringliteral">&quot;red&quot;</highlight><highlight class="normal">,<sp/>width<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.bar(</highlight><highlight class="stringliteral">&apos;Meme2<sp/>wins<sp/>&apos;</highlight><highlight class="normal">,M2_Wins,color=</highlight><highlight class="stringliteral">&quot;blue&quot;</highlight><highlight class="normal">,<sp/>width<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.bar(</highlight><highlight class="stringliteral">&apos;No<sp/>Decisive<sp/>winner&apos;</highlight><highlight class="normal">,No_win,color=</highlight><highlight class="stringliteral">&quot;green&quot;</highlight><highlight class="normal">,<sp/>width<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.xlabel(</highlight><highlight class="stringliteral">&quot;Meme&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.ylabel(</highlight><highlight class="stringliteral">&quot;No.<sp/>Total<sp/>infections&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.title(</highlight><highlight class="stringliteral">&quot;Total<sp/>infections<sp/>by<sp/>meme&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="367"><highlight class="stringliteral">Setting<sp/>up<sp/>the<sp/>Simulation<sp/>Matrices</highlight></codeline>
<codeline lineno="368"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="namespace_s_i_i_s_1aa5d8f43bef1575e80e2f288c3d1b6e53" refkind="member"><highlight class="normal">A1<sp/>=<sp/>np.random.randint(2,<sp/>size=(N,<sp/>N),<sp/>dtype=np.int8)<sp/><sp/></highlight><highlight class="comment">#<sp/>adjacency<sp/>matrix<sp/>for<sp/>edge<sp/>1,<sp/>filled<sp/>with<sp/>random<sp/>0s<sp/>and<sp/>1s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal">np.fill_diagonal(A1,<sp/>0)<sp/><sp/></highlight><highlight class="comment">#<sp/>make<sp/>A1<sp/>diagonal<sp/>0&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="namespace_s_i_i_s_1a70172c3865725551cf373fc4a2f90433" refkind="member"><highlight class="normal">A2<sp/>=<sp/>np.random.randint(2,<sp/>size=(N,<sp/>N),<sp/>dtype=np.int8)<sp/><sp/></highlight><highlight class="comment">#<sp/>adjacency<sp/>matrix<sp/>for<sp/>edge<sp/>2,<sp/>filled<sp/>with<sp/>random<sp/>0s<sp/>and<sp/>1s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal">np.fill_diagonal(A2,<sp/>0)<sp/><sp/></highlight><highlight class="comment">#<sp/>make<sp/>A2<sp/>diagonal<sp/>0&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal">A1<sp/>=<sp/>(A1<sp/>+<sp/>A1.T<sp/>-<sp/>np.diag(A1.diagonal()))<sp/>%<sp/>2</highlight></codeline>
<codeline lineno="376"><highlight class="normal">A2<sp/>=<sp/>(A2<sp/>+<sp/>A2.T<sp/>-<sp/>np.diag(A2.diagonal()))<sp/>%<sp/>2</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="namespace_s_i_i_s_1a94d4aca0a1e957b7a51c910b70b542a5" refkind="member"><highlight class="normal">S1<sp/>=<sp/>(1<sp/>-<sp/>delta1)<sp/>*<sp/>np.identity(N,<sp/>dtype=np.int8)<sp/>+<sp/>beta1<sp/>*<sp/>A1</highlight></codeline>
<codeline lineno="379" refid="namespace_s_i_i_s_1afe0854a7f237a419933ae98bce821481" refkind="member"><highlight class="normal">S2<sp/>=<sp/>(1<sp/>-<sp/>delta2)<sp/>*<sp/>np.identity(N,<sp/>dtype=np.int8)<sp/>+<sp/>beta2<sp/>*<sp/>A2</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">#<sp/>print(A1,&quot;\n**********\n&quot;,A2,&quot;\n**********\n&quot;,S1,&quot;\n**********\n&quot;,S2,&quot;\n**********\n&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/></highlight></codeline>
<codeline lineno="383"><highlight class="stringliteral">Find<sp/>the<sp/>Eigenvalues<sp/>of<sp/>The<sp/>System<sp/>Matrices</highlight></codeline>
<codeline lineno="384"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="namespace_s_i_i_s_1a2cce8fdaa73ab70e4596012926ece943" refkind="member"><highlight class="normal">eigenValues1,<sp/>eigenVectors1<sp/>=<sp/>linalg.eig(S1)</highlight></codeline>
<codeline lineno="388" refid="namespace_s_i_i_s_1ac3b1f2748063d9addb90e0c297eb9fb1" refkind="member"><highlight class="normal">eigenValues2,<sp/>eigenVectors2<sp/>=<sp/>linalg.eig(S2)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="namespace_s_i_i_s_1a84411c515614a2ed36af934a8c29cc1d" refkind="member"><highlight class="normal">idx<sp/>=<sp/>eigenValues1.argsort()[::-1]</highlight></codeline>
<codeline lineno="392"><highlight class="normal">eigenValues1<sp/>=<sp/>eigenValues1[idx]</highlight></codeline>
<codeline lineno="393"><highlight class="normal">eigenVectors1<sp/>=<sp/>eigenVectors1[:,idx]</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal">idx<sp/>=<sp/>eigenValues2.argsort()[::-1]</highlight></codeline>
<codeline lineno="396"><highlight class="normal">eigenValues2<sp/>=<sp/>eigenValues2[idx]</highlight></codeline>
<codeline lineno="397"><highlight class="normal">eigenVectors2<sp/>=<sp/>eigenVectors2[:,idx]</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">#Round<sp/>largest<sp/>eigenvalue<sp/>so<sp/>that<sp/>it<sp/>is<sp/>not<sp/>visually<sp/>too<sp/>large</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal">eigenValues1[0]<sp/>=<sp/>round(eigenValues1[0],<sp/>4)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">eigenValues2[0]<sp/>=<sp/>round(eigenValues2[0],<sp/>4)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal">print(</highlight><highlight class="stringliteral">&quot;Largest<sp/>Eigen<sp/>Value<sp/>for<sp/>Meme1:<sp/>&quot;</highlight><highlight class="normal">,<sp/>eigenValues1[0])</highlight></codeline>
<codeline lineno="404"><highlight class="normal">print(</highlight><highlight class="stringliteral">&quot;Largest<sp/>Eigen<sp/>Value<sp/>for<sp/>Meme2:<sp/>&quot;</highlight><highlight class="normal">,<sp/>eigenValues2[0])</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/></highlight></codeline>
<codeline lineno="407"><highlight class="stringliteral">Creating<sp/>all<sp/>the<sp/>Nodes<sp/>for<sp/>the<sp/>Simulation</highlight></codeline>
<codeline lineno="408"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Create<sp/>Nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>N):</highlight></codeline>
<codeline lineno="412" refid="namespace_s_i_i_s_1ad510cbae67271dda2063233b51aaafad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/><ref refid="class_s_i_i_s_1_1_node" kindref="compound">Node</ref>()</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="namespace_s_i_i_s_1a8da1a41b1401b1b7ac673d0a8d5265d3" refkind="member"><highlight class="normal">allNodes.sort(key=</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>x.id,<sp/>reverse=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment">#<sp/>add<sp/>neighbors<sp/>to<sp/>nodes<sp/>from<sp/>adjacency<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>allNodes:</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>i.addNeighbors()</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="namespace_s_i_i_s_1ab9810fef4d7b3ff0765a4d6830a9ca96" refkind="member"><highlight class="normal">infected_meme1<sp/>=<sp/>random.sample(allNodes,10)<sp/><sp/></highlight><highlight class="comment">#<sp/>choose<sp/>how<sp/>many<sp/>nodes<sp/>start<sp/>infected<sp/>by<sp/>meme<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="namespace_s_i_i_s_1a93604b4d9e16c1681f652610898b8011" refkind="member"><highlight class="normal">infected_meme2<sp/>=<sp/>random.sample(allNodes,<sp/>10)<sp/><sp/></highlight><highlight class="comment">#<sp/>choose<sp/>how<sp/>many<sp/>nodes<sp/>start<sp/>infected<sp/><sp/>by<sp/>meme<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><ref refid="namespace_s_i_i_s_1a68ed4322068cfbb790ec5fa305ded181" kindref="member">set_simulation</ref>()</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><ref refid="namespace_s_i_i_s_1a9ce6bf60763fb485eaee729dcb4c2adb" kindref="member">count</ref>()</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">#<sp/>method<sp/>for<sp/>removing<sp/>random<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment">#<sp/>randomRem()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment">#<sp/>method<sp/>for<sp/>removing<sp/>random<sp/>neigbor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">#<sp/>sampled_M1_Wins<sp/>=<sp/>np.empty([2,50])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="comment">#<sp/>sampled_M2_Wins<sp/>=<sp/>np.empty([2,50])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">#<sp/>sampled_No_Wins<sp/>=<sp/>np.empty([2,50])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/></highlight></codeline>
<codeline lineno="439"><highlight class="stringliteral">Calling<sp/>Methods<sp/>to<sp/>Run<sp/>the<sp/>Simulation<sp/>without<sp/>Meme<sp/>Suppression</highlight></codeline>
<codeline lineno="440"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/></highlight></codeline>
<codeline lineno="449"><highlight class="stringliteral">Calling<sp/>Methods<sp/>to<sp/>Run<sp/>the<sp/>Simulation<sp/>without<sp/>Meme<sp/>Suppression</highlight></codeline>
<codeline lineno="450"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><ref refid="namespace_s_i_i_s_1a0451e8de5927fe55012013546da79f33" kindref="member">run_sim</ref>()</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><ref refid="namespace_s_i_i_s_1a107080135e2bcab2d5018a985632c0e1" kindref="member">plot_res</ref>(</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="453"><highlight class="normal">print(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>Meme<sp/>1<sp/>wins:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="454"><highlight class="normal">print(M1_Wins)</highlight></codeline>
<codeline lineno="455"><highlight class="normal">print(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>Meme<sp/>2<sp/>wins:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">print(M2_Wins)</highlight></codeline>
<codeline lineno="457"><highlight class="normal">print(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/><sp/>no<sp/>clear<sp/>winner:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="458"><highlight class="normal">print(No_win)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Showing<sp/>Plots<sp/>for<sp/>one<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal">print(</highlight><highlight class="stringliteral">&quot;Total<sp/>Infections<sp/>by<sp/>Meme<sp/>1:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="462"><highlight class="normal">print(tot_inf1)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal">print(</highlight><highlight class="stringliteral">&quot;Total<sp/>Infections<sp/>by<sp/>Meme<sp/>2:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="465"><highlight class="normal">print(tot_inf2)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/></highlight></codeline>
<codeline lineno="468"><highlight class="stringliteral">Calling<sp/>Methods<sp/>to<sp/>Run<sp/>the<sp/>Simulation<sp/>with<sp/>Meme<sp/>Suppression</highlight></codeline>
<codeline lineno="469"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>total_M1<sp/>&gt;<sp/>total_M2:</highlight></codeline>
<codeline lineno="476" refid="namespace_s_i_i_s_1a9b56e6ecae380824a538274919502b95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>edge<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>edge<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">#<sp/>infected_meme1<sp/>=<sp/>random.sample(allNodes,random.randint(1,len(allNodes)/2))#randomly<sp/>choose<sp/>how<sp/>many<sp/>nodes<sp/>start<sp/>infected<sp/>with<sp/>no<sp/>more<sp/>than<sp/>half<sp/>being<sp/>infected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">#<sp/>infected_meme2<sp/>=<sp/>random.sample(allNodes,random.randint(1,len(allNodes)/2))#randomly<sp/>choose<sp/>how<sp/>many<sp/>nodes<sp/>start<sp/>infected<sp/><sp/>by<sp/>meme<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal">infected_meme1<sp/>=<sp/>random.sample(allNodes,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2)<sp/><sp/></highlight><highlight class="comment">#<sp/>randomly<sp/>choose<sp/>how<sp/>many<sp/>nodes<sp/>start<sp/>infected<sp/>with<sp/>no<sp/>more<sp/>than<sp/>half<sp/>being<sp/>infected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal">infected_meme2<sp/>=<sp/>random.sample(allNodes,<sp/>2)<sp/><sp/></highlight><highlight class="comment">#<sp/>randomly<sp/>choose<sp/>how<sp/>many<sp/>nodes<sp/>start<sp/>infected<sp/><sp/>by<sp/>meme<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><ref refid="namespace_s_i_i_s_1a68ed4322068cfbb790ec5fa305ded181" kindref="member">set_simulation</ref>()</highlight></codeline>
<codeline lineno="486"><highlight class="normal">print(</highlight><highlight class="stringliteral">&quot;M1:&quot;</highlight><highlight class="normal">,<sp/>total_M1)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">print(</highlight><highlight class="stringliteral">&quot;M2:&quot;</highlight><highlight class="normal">,<sp/>total_M2)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><ref refid="namespace_s_i_i_s_1a9ce6bf60763fb485eaee729dcb4c2adb" kindref="member">count</ref>()</highlight></codeline>
<codeline lineno="489"><highlight class="normal">print(</highlight><highlight class="stringliteral">&quot;M1:&quot;</highlight><highlight class="normal">,<sp/>total_M1)</highlight></codeline>
<codeline lineno="490"><highlight class="normal">print(</highlight><highlight class="stringliteral">&quot;M2:&quot;</highlight><highlight class="normal">,<sp/>total_M2)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="comment">#<sp/>randomNeigh(edge)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">#<sp/>randomRem()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><ref refid="namespace_s_i_i_s_1a80b1cbd24ef3bce4414388e55f7a8a17" kindref="member">max_degree</ref>(edge)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><ref refid="namespace_s_i_i_s_1a0451e8de5927fe55012013546da79f33" kindref="member">run_sim</ref>()</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><ref refid="namespace_s_i_i_s_1a107080135e2bcab2d5018a985632c0e1" kindref="member">plot_res</ref>(</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Max_Degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Showing<sp/>Plots<sp/>for<sp/>one<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal">print(</highlight><highlight class="stringliteral">&quot;After<sp/>suppression\nTotal<sp/>Infections<sp/>by<sp/>Meme<sp/>1:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="499"><highlight class="normal">print(tot_inf1)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal">print(</highlight><highlight class="stringliteral">&quot;Total<sp/>Infections<sp/>by<sp/>Meme<sp/>2:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="502"><highlight class="normal">print(tot_inf2)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Bobby the Kid&apos;s/Documents/turtledefense/TurtleDefense/PythonTrial/SIIR/SIIS.py"/>
  </compounddef>
</doxygen>
